Выполните задание, описанные ниже. Код задания должен быть находиться в ветке lesson-3 в вашем репозитории.

Необходимо реализовать простой http-сервер, используя встроенные возможности node.js. 

  1. Код задания должен содержать как минимум 2 модуля:
    app.js - точка входа в приложение (сервер должен запускаться командой node app.js)
    users.js - содержит код для работы с пользователями
    указанные выше модули могут подключать другие модули, если необходимо
  2. http-сервер должен запускаться на локальном хосте. Порт может быть задан в качестве переменной окружения. Например, команда PORT=9000 node app.js должна запустить http сервер, который слушает входящие соединения на 127.0.0.1:9000. Значение порта по умолчанию (если переменная окружения не задана) - 8000.
  3. После запуска сервер должен выводить отладочное сообщение в консоль “Server is running on [host]:[port]”
  4. Сервер должен уметь обрабатывать следующие запросы:  
    1) GET users/ Возвращает список всех пользователей.
    2) POST users/ Добавляет нового пользователя в систему. В теле запроса передается JSON-представление нового пользователя(содержит firstName, lastName, age). Уникальное поле id генерируется сервером при создании пользователя и не содержится в теле запроса.
    3) GET users/:id Возвращает пользователя с переданным id. Id является частью пути, а не параметром запроса. Например: users/1
    4) PUT users/:id Изменяет пользователя с переданным id. Только поля, содержащиеся в теле запроса, должны быть изменены. Если в теле запроса нет поля,  оно должно сохранить прежнее значение. Поле id неизменяемо.
    5) DELETE users/:id Удаляет пользователя с переданным id.
  5. На любые другие запросы, не перечисленные в таблице, сервер должен отвечать с http-статус кодом 404. 
  6. Если пользователь с указанным id не найден, сервер должен отвечать с http-статус кодом 404. 
  7. Скопируйте список пользователей, доступных сразу после запуска сервера https://jsfiddle.net/7mp5yzdf/ и сохраните в файле users.json в каталоге вашего проекта. После запуска сервер должен использовать эти значения в качестве исходных. Записывать новых пользователей в файл не нужно, при перезапуске сервер снова должен возвращать только исходный список пользователей. В процессе работы сервер должен хранить текущий список пользователей в памяти.
  8. Id пользователя должен быть уникальным, неизменяемым и генерироваться при создании нового пользователя.
